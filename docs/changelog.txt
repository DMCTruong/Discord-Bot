#################################################################################
# Program Name  :     Discord Bot
# Author        :     DMCTruong
# Last Updated  :     September 02, 2017
# License       :     MIT
# Description   :     A general purpose bot written for Discord               
#################################################################################

09/02/17
- Wrote more detailed Installation Instructions.
- Updated Readme regarding Bot invitation.
- Updated Bot Account

08/31/17
- Added a message in Readme about inviting the bot to server.

08/26/17
- Fixed the Readme to reflect 08/25/17 changes.

08/25/17
- Adjusted code style indentation for all files.
- Added logging options in configurations.py
- Changed "::" command prefix to ">>"
- Moved /join_date from Bot.py to Timer.py

08/21/17
- Changed /uptime command to /date
	/date:	Gives the current date and time
- Changed "cogs" folder name to "modules"

08/20/17
- Created new "owner _only" cog and moved the /restart and /shutdown commands to it.
- Added more console print statements for debugging purposes
- Changed command prefix from "/" to "::"
- Removed /trollEveryone, /noMoreTroll, and /kill commands

08/19/17
- Added Table of Contents with working links
- Updated Readme

08/18/17
- Only the owner can use the /shutdown and /restart command
- Added two commands:
	/restart:     Restarts the bot
	/join_date: Gives user's server join date	
- Added console print statements for debugging purposes

08/07/17
- Moved the bots from Cloud9 to PythonAnywhere
- Updated Readme and added a command list

08/07/17
- Added /uptime command: A timer that gives the user a 15 minute warning when the bot needs to restart.
	Since the bots are being hosted on Cloud9, the service automatically shutdown the bots after every 5 hours.
	This command helps the user tell when it's almost time for the bots to be shutdown so the user may manually restart.
	This command is temporary until a proper restart function is implemented with the timer.

08/06/17
- Updated the README, a demo of the bot is now hosted on Cloud9
- The bot can now posts gifs when the /hug command is used. The gifs are stored on Webhost000
- Added /shutdown command: Allows user to shutdown the bot from Discord chat

08/01/17
- Added MIT License
- Minor additions to Bot.py and configurations.py
- Removed Minecraft-related database commands
- Customized /help command

07/31/17
- Separated the commands in Bot.py into the following files based on functions so it will be easier to maintain
	database.py:	All database/pyrebase related commands
	help.py:		All help/search related commands
	miscellaneous.py:	Miscellaneous text commands
	music.py:		Music channel commands

07/29/17
- Added the following Pyrebase commands:
	/newEntry: User can create a new database in pyrebase. This command can also be used to add entries into existing databases.
	/alldb: This command returns the names of all of the databases that are currently being stored in Pyrebase

07/27/17
- Updated and added more information in configurations.py
- Taught the bot how to sing
	The bot can now join voice channels and play music, though, there are some issues with music buffering.
	Hopefully, the issue with buffering will be fixed soon.

07/26/17
- Added some tutorial in configurations.py
- Added the following commands that are related to Minecraft though it may be used for other things as well
	/show_location_names: The bot returns a list of names of locations from the database
	/add_location: The user can add new locations (name, coordinates)to the database
	/show_location: The bot returns the coordinates of the location that the user specifies from using the command /show_location_names
- The Firebase database now works with Discord Bot

07/25/17
- Removed /test command, it was redundant
- Minor changes to the following commands: 
	renamed /instanceof to /trollEveryone and added more functionality
	renamed /noinstance to /noMoreTroll
	renamed /choice to /pick
- Moved all of Discord IDs and data that the bot requires from Bot.py into configurations.py to make it easier for the user to customize
- Added program header/information and To-do List in Bot.py
- Added /help command: Bot returns a list commands that the bot can perform but more details abou each command will be added a bit later
- Added /ask command: Functions similar to "Eight Ball," the bot returns an answer to user in yes, no, or perhaps form

07/22/17
- Added /pyhelp command: Allows the user to use the bot to search in Python's documentations

07/21/17
- Added /noinstance command: Return everyone's nickname back to normal in the server

07/20/17
- Added /instanceof command: Add "instanceof" to everyone's nickname in the server
- Added /choice command: allows user to let the bot pick out of a set of choices that the user provides

07/19/17
- Added a changelog

07/18/17
- Added /hug and /kill commands; two silly commands for the user to play with
- Updated Readme about what's required to install

07/17/17
- Added a /echo command that lets the bot echo what the user said
- Converted the project from JavaScript to Python

06/01/17
- Updated some information about the project in Readme.md

05/31/17
- The bot can now log and send text messages in Discord